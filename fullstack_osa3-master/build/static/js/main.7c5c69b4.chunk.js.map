{"version":3,"sources":["components/Filter.js","components/AddForm.js","components/Contact.js","services/persons.js","components/Contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchWord","callback","value","type","placeholder","onChange","AddForm","props","onSubmit","addCallback","person","name","changeCallback","number","Contact","deletePerson","onClick","baseUrl","getAll","axios","get","then","response","data","update","changedPerson","id","put","create","newPerson","post","delete","Contacts","persons","setPersons","setMessage","rowsArray","map","toLowerCase","includes","key","console","log","find","n","window","confirm","personService","filter","setTimeout","Notification","message","errorMessage","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPerson","setWord","setErrorMessage","useEffect","personsData","e","target","preventDefault","some","x","personToBeChanged","p","concat","catch","error","addedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c5c69b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchWord, callback}) => \r\n\r\n    <div>\r\n        Search name\r\n        <input value={searchWord} type=\"text\" placeholder=\"Search..\" onChange={callback} />\r\n    </div>\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst AddForm = (props) =>\r\n    <form onSubmit={props.addCallback}>\r\n        <div>\r\n            name: \r\n            <input value={props.person.name} onChange={props.changeCallback} name=\"name\" />\r\n        </div>\r\n        <div>number:\r\n            <input value ={props.person.number} onChange={props.changeCallback} name=\"number\"/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n\r\nexport default AddForm","import React from 'react'\r\n    \r\n    const Contact = ({name, number, deletePerson}) => \r\n        <tr>\r\n            <td >{name}</td>\r\n            <td>{number}</td>\r\n            <td><button onClick = {deletePerson}>delete</button></td>\r\n        </tr>\r\n\r\nexport default Contact\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (changedPerson, id) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`, changedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) =>{\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, update, create, deletePerson}","import React from 'react'\r\nimport Contact from \"./Contact\"\r\nimport personService from \"../services/persons\"\r\n\r\n\r\n\r\nconst Contacts = ({persons, searchWord, setPersons, setMessage}) =>{\r\n\r\n\r\n  const deletePerson = id => {\r\n    console.log(`the person of id ${id} was clicked`)\r\n    const person = persons.find(n => n.id === id)\r\n    const result = window.confirm(`Delete ${person.name}?`);\r\n    if(result){\r\n      console.log(\"got here\")\r\n      personService\r\n        .deletePerson(id)\r\n        .then(setPersons(persons.filter(n => n.id !== id)))\r\n      \r\n      setMessage(`${person.name} deleted`)\r\n      setTimeout(() =>{\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }  \r\n\r\n\r\nconst rowsArray = persons.map(person => {\r\n  if(person.name.toLowerCase().includes(searchWord.toLowerCase())){\r\n    return <Contact \r\n      key = {person.name} \r\n      name = {person.name} \r\n      number = {person.number}\r\n      deletePerson = {() => deletePerson(person.id)}\r\n    />\r\n  }\r\n  return \"\"\r\n  \r\n}\r\n)\r\nreturn(\r\n    <table>\r\n        <tbody>\r\n            {rowsArray}\r\n        </tbody>\r\n    </table>\r\n)\r\n}\r\n\r\nexport default Contacts\r\n\r\n\r\n///////////////////////////////","import React from \"react\"\r\n\r\nconst Notification = ({message, errorMessage}) => {\r\n    const stylesMessage = {\r\n        color: \"green\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n      const stylesErrorMessage = {\r\n        color: \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding:10,\r\n        marginBottom: 10\r\n      }  \r\n\r\n\r\n    if(message === null && errorMessage === null){\r\n        return null;\r\n    } else if (errorMessage === null && message !== null){\r\n        return <div style = {stylesMessage}>{message}</div> \r\n    } \r\n    return <div style = {stylesErrorMessage}>{errorMessage}</div>\r\n    \r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport AddForm from \"./components/AddForm\"\nimport Contacts from \"./components/Contacts\"\nimport personService from \"./services/persons\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [person, setPerson] = useState({name:\"\", number:\"\"})\n  const [searchWord, setWord] = useState(\"\")\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    \n    personService\n        .getAll()\n        .then(personsData => setPersons(personsData))\n\n  },[])\n\n  function addContact(e){\n    e.preventDefault()\n    \n    if(!persons.some(x => x.name === person.name)){\n      personService\n        .create(person)\n        .then(addedPerson => {\n          setPersons(persons.concat(addedPerson))\n          setMessage(`Added ${person.name}`)  \n          setTimeout(() => \n          setMessage(null), 5000\n          )\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          setErrorMessage(`${error.response.data.error}`)  \n          setTimeout(() => \n            setErrorMessage(null), 5000\n          )\n        })\n        \n      \n      \n    } else {\n      const personToBeChanged = persons.find(p => p.name === person.name)\n      const result = window.confirm(\n        `${person.name} is already added to phonebook, replace the old number with a new one?`\n      );\n      if(result){\n        personService\n          .update(person, personToBeChanged.id)\n          .then(response => {\n            setPersons(persons.filter(p => p.name !== response.name).concat(response))\n            setMessage(\"Number changed\")\n            setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          })\n          \n          .catch(error => {\n            \n            setErrorMessage(`Information of ${person.name} has already been removed from the server`)\n            setPersons(persons.filter(p => person.name !== p.name))\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          }\n            \n          )\n          \n          \n      }\n    }\n    setPerson({name:\"\", number:\"\"})\n  }\n\n  function contactInputChanged(e){\n    setPerson({...person, [e.target.name]: e.target.value})\n  }\n\n  function searchWordChanged(e){\n    setWord(e.target.value)\n  }\n\n  \n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} errorMessage={errorMessage}/>\n      <Filter searchWord = {searchWord} callback = {searchWordChanged}/>\n     \n      \n      <h2>Add new contact</h2>\n\n      <AddForm person={person} changeCallback ={contactInputChanged} addCallback={addContact}/>\n      \n      <h2>Numbers</h2>\n\n      <Contacts persons ={persons} searchWord={searchWord} setPersons ={setPersons} setMessage={setMessage}/>\n      \n      \n    </div>\n  )\n\n}\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}